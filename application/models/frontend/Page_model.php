<?phpclass Page_model extends CI_Model {    function __construct() {    	parent::__construct();    }		/*------------ Function List <Start>-----------------	01: getPageData 	02: getHomeAboutAllData 	03: getPageFaqs 	04: getFaq 	05: getHomeSlider 	06: getSponsoredTelents 	07: getVisibleCategory 	08: getEmployerReviews 	09: getFeaturedCategories 	10: getTalentsByCategoryId	11: getAdsById 	12: getAllTeamMembers	13: addContactQuery 	------------ Function List <End>-----------------*/	/* -------- GET FUNCTIONS <START> -------- */	// 01: getPageData 	 public function getRows($id = ''){         $this->db->select('id,exam_id,type,file_name,uploaded_on');         $this->db->from('exams_images');         if($id){             $this->db->where('exam_id',$id);             $query = $this->db->get();             $result = $query->result_array();         }else{             $this->db->order_by('uploaded_on','desc');             $query = $this->db->get();             $result = $query->result_array();         }                  return !empty($result)?$result:false;     }     public function getRowsAcademic($id = ''){         $this->db->select('id,exam_id,type,file_name,uploaded_on');         $this->db->from('academic_images');         if($id){             $this->db->where('exam_id',$id);             $query = $this->db->get();             $result = $query->result_array();         }else{             $this->db->order_by('uploaded_on','desc');             $query = $this->db->get();             $result = $query->result_array();         }                  return !empty($result)?$result:false;     }     public function getRowsFellowship($id = ''){         $this->db->select('id,exam_id,type,file_name,uploaded_on');         $this->db->from('fellowship_images');         if($id){             $this->db->where('exam_id',$id);             $query = $this->db->get();             $result = $query->result_array();         }else{             $this->db->order_by('uploaded_on','desc');             $query = $this->db->get();             $result = $query->result_array();         }                  return !empty($result)?$result:false;     }    public function getPoster($id = ''){         $this->db->select('id,exam_id,type,file_name,uploaded_on');         $this->db->from('academic_poster');         if($id){             $this->db->where('exam_id',$id);             $query = $this->db->get();             $result = $query->result_array();         }else{             $this->db->order_by('uploaded_on','desc');             $query = $this->db->get();             $result = $query->result_array();         }                  return !empty($result)?$result:false;     }		 public function getPosterFellowship($id = ''){         $this->db->select('id,exam_id,type,file_name,uploaded_on');         $this->db->from('fellowship_poster');         if($id){             $this->db->where('exam_id',$id);             $query = $this->db->get();             $result = $query->result_array();         }else{             $this->db->order_by('uploaded_on','desc');             $query = $this->db->get();             $result = $query->result_array();         }                  return !empty($result)?$result:false;     }	public function addfrontCard($file_name, $user_id)	{	    $qry1 = "Update user SET  `id_card_front` = '".$file_name."' WHERE `id` = '".$user_id."' ";		$query1 = $this->db->query($qry1);	}	public function addbackCard($file_name, $user_id)	{	    $qry1 = "Update user SET  `id_card_back` = '".$file_name."' WHERE `id` = '".$user_id."' ";		$query1 = $this->db->query($qry1);	}	public function addDegreeCard($file_name, $user_id)	{	    $qry1 = "Update user SET  `degree` = '".$file_name."' WHERE `id` = '".$user_id."' ";		$query1 = $this->db->query($qry1);	}	public function addfellowshipFee($file_name, $user_id)	{	    $qry1 = "Update user SET  `fellowshipFee` = '".$file_name."' WHERE `id` = '".$user_id."' ";		$query1 = $this->db->query($qry1);	}	public function addDefellowshipCV($file_name, $user_id)	{	    $qry1 = "Update user SET  `fellowshipCV` = '".$file_name."' WHERE `id` = '".$user_id."' ";		$query1 = $this->db->query($qry1);	}	public function addfellowhsipApplication($file_name, $user_id)	{	    $qry1 = "Update user SET  `fellowhsipApplication` = '".$file_name."' WHERE `id` = '".$user_id."' ";		$query1 = $this->db->query($qry1);	}	public function addPMDC($file_name, $user_id)	{	    $qry1 = "Update user SET  `pmdc_id` = '".$file_name."' WHERE `id` = '".$user_id."' ";		$query1 = $this->db->query($qry1);	}	public function addmember($sel,$file_name, $user_id,$designation,$institute,$phone,$address)	{		$qry1 = "Update user SET premium_subscription = '".$sel."',  `fee_receipt` = '".$file_name."', designation = '".$designation."', institute = '".$institute."', address = '".$address."', phone = '".$phone."' WHERE `id` = '".$user_id."' ";		$query1 = $this->db->query($qry1);	}	public function commission($value='')	{		$qStr = "SELECT *					FROM				 commission_settings WHERE is_active = '1'";		$query = $this->db->query($qStr);        return $query->row_array();	}	public function priceplan($value='')	{		$qStr = "SELECT *					FROM				 go_pro WHERE type = '1'";		$query = $this->db->query($qStr);        return $query->row_array();	}	function getPageData($page_id) {         $qStr = "SELECT 					#PAGES					id, page_id, page_name, field_name, content				 FROM					pages 				 WHERE					page_id = ".$page_id." AND					is_active = ".ACTIVE_STATUS_ID;        $query = $this->db->query($qStr);        $result= $query->result_array();        $page_data = '';        if(!empty($result)){ 			foreach($result as $data){				$page_data[$data['field_name']] = $data;			}		}        return $page_data;    }    function getTermsAndConditions()	{		$qStr = "SELECT 					*				 FROM					terms_and_conditions_cms 				 WHERE					is_active = ".ACTIVE_STATUS_ID;        $query = $this->db->query($qStr);        $result= $query->result_array();        return $result;	}     function getprivacyPolicyData()    {    	$qStr = "SELECT 										*				 FROM					privacy_policy_cms 				 WHERE					is_active = ".ACTIVE_STATUS_ID." ORDER BY content_order ASC"  ;        $query = $this->db->query($qStr);        $result= $query->result_array();            return $result;    }    function getPricingTopContent()    {    	$qStr = "SELECT 										*				 FROM					pricing_cms 				 WHERE					is_active = ".ACTIVE_STATUS_ID." AND top_section = '1'"  ;        $query = $this->db->query($qStr);        $result= $query->result_array();            return $result;    }		// 02: getHomeAboutAllData 	function getHomeAboutAllData($page_id) {         $qStr = "SELECT 					*				 FROM					home_about_content 				 WHERE					page_id = ".$page_id." AND					is_active != ".DELETED_STATUS_ID;        $query = $this->db->query($qStr);        $result= $query->result_array();        $page_data = '';        if(!empty($result)){ 			foreach($result as $data){				$page_data[$data['field_name']] = $data;			}		}        return $page_data;    }		// 03: getPageFaqs 	function getPageFaqs($page_id) {         $qStr = "SELECT 					*				 FROM					faq_headings 				 WHERE					page_id = ".$page_id." AND					is_active = ".ACTIVE_STATUS_ID;        $query = $this->db->query($qStr);        $result= $query->result_array();        if(!empty($result)){ 			foreach($result as $key=>$data){				$result[$key]['faqs'] = $this->getFaq($data['id']);			}		}        return $result;    }	// 04: getFaq 	function getFaq(){        $qStr = "SELECT 					*				 FROM					faq_cms				 WHERE					is_active = ".ACTIVE_STATUS_ID;        $query = $this->db->query($qStr);        $result= $query->result_array();		return $result;	}	function getContact(){        $qStr = "SELECT 					*				 FROM					contact_cms				 WHERE					is_active = ".ACTIVE_STATUS_ID;        $query = $this->db->query($qStr);        $result= $query->row_array();		return $result;	}		// 05: getHomeSlider 	function getHomeSlider(){		$qStr = "SELECT					id, image_url, content,is_active,slide_url,order_id,url_btn_text				 FROM					home_slider 				 WHERE					 is_active = ".ACTIVE_STATUS_ID."					 ORDER BY order_id ASC";        $query = $this->db->query($qStr);        $result= $query->result_array();        return $result;	}		// 06: getSponsoredTelents 	function getSponsoredTelents(){		$qStr = "SELECT				 	users.*, talent_categories.title as talent_category, talent_categories.visible_field_ids				 FROM				 	users					INNER JOIN talent_categories						ON						users.talent_category_id = talent_categories.id				 WHERE 					users.is_active = ".ACTIVE_STATUS_ID." AND users.is_sponsored = ".ACTIVE_STATUS_ID." AND users.role = ".USER_ROLE_TALENT."";		$query = $this->db->query($qStr);		return $query->result_array();	}		// 07: getVisibleCategory 	function getVisibleCategory($visible_field_ids){		$qStr = "SELECT				 	categories_fields.name, categories_fields.placeholder				 FROM				 	categories_fields				 WHERE 					categories_fields.id IN (".$visible_field_ids.") AND categories_fields.is_active = ".ACTIVE_STATUS_ID;		$query = $this->db->query($qStr);		return $query->result_array();			}		// 08: getEmployerReviews 	function getEmployerReviews(){		$qStr = "SELECT					reviews.headline, reviews.review, reviews.rating, users.profile_image, users.first_name, users.last_name, users.company_name				 FROM					reviews					INNER JOIN users						ON						reviews.employer_id = users.id				 WHERE					 reviews.is_active = ".APPROVED_REVIEW_STATUS_ID." AND reviews.reviewer_role = ".USER_ROLE_EMPLOYER."					 ORDER BY reviews.rating DESC LIMIT 10";        $query = $this->db->query($qStr);        $result= $query->result_array();        return $result;	}		// 09: getFeaturedCategories 	function getFeaturedCategories(){		$qStr = "SELECT				 	talent_categories.id, talent_categories.title, talent_categories.visible_field_ids				 FROM				 	talent_categories				 WHERE 					talent_categories.is_active = ".ACTIVE_STATUS_ID." AND talent_categories.is_featured = ".ACTIVE_STATUS_ID."					ORDER BY talent_categories.title					limit 4";		$query = $this->db->query($qStr);		return $query->result_array();	}		// 10: getTalentsByCategoryId 	function getTalentsByCategoryId($id){		$qStr = "SELECT				 	users.id, users.first_name, users.last_name, users.profile_image				 FROM				 	users				 WHERE 					users.is_active = ".ACTIVE_STATUS_ID." AND subscription_expiry >= ".strtotime(date('Y-m-d'))." AND users.talent_category_id = ".$id."					AND users.role = ".USER_ROLE_TALENT."					LIMIT 4";		$query = $this->db->query($qStr);		return $query->result_array();	}		// 11: getAdsById 	function getAdsById($dimension_id){		$qStr = "SELECT				 	*				 FROM				 	ads				 WHERE 					dimension_id = ".$dimension_id." AND is_active = ".ACTIVE_STATUS_ID." AND type=1				 ORDER BY created DESC";		$query = $this->db->query($qStr);		return $query->result_array();			}		//12: getAllTeamMembers	function getAllTeamMembers(){		$qStr = "SELECT 										id, image_url, content, is_active, name, url, order_id				 FROM					our_team 				 WHERE					 is_active != ".DELETED_STATUS_ID."					 ORDER BY order_id ASC";        $query = $this->db->query($qStr);        $result= $query->result_array();        return $result;	}			//13: getAllSubCategories	function getAllSubCategories($ids){		$and = (!empty($ids))?" AND id IN (".$ids.") ":"";		$qStr = "SELECT 										*				 FROM					talent_categories 				 WHERE					 is_active = ".ACTIVE_STATUS_ID." AND parent_id !=".INACTIVE_STATUS_ID.$and." ORDER BY id ASC";        $query = $this->db->query($qStr);        $result= $query->result_array();        return $result;	}	function getTopContent()	{		$qStr = "SELECT 									*				 FROM					homepage_cms 				 WHERE					is_active = ".ACTIVE_STATUS_ID." AND section = '".TOP_CONTENT_SECTION."'";        $query = $this->db->query($qStr);        $result= $query->row_array();        return $result;	}	function getMiddleContent()	{		$qStr = "SELECT 									*				 FROM					homepage_cms 				 WHERE					is_active = ".ACTIVE_STATUS_ID." AND section = '".MIDDLE_CONTENT_SECTION."'";        $query = $this->db->query($qStr);        $result= $query->result_array();        return $result;	}	function getBottomContent()	{		$qStr = "SELECT 									*				 FROM					homepage_cms 				 WHERE					is_active = ".ACTIVE_STATUS_ID." AND section = '".BOTTOM_CONTENT_SECTION."'";        $query = $this->db->query($qStr);        $result= $query->result_array();        return $result;	}	/* -------- GET FUNCTIONS <END> -------- */		/* -------- INSERT FUNCTIONS <START> -------- */	// 14: addContactQuery 	// function addContactQuery($contact_name,$contact_email,$contact_subject,$contact_message,$query_type){	// 	$qStr="INSERT into contact_us set	// 			name='".$contact_name."',email='".$contact_email."',subject='".$contact_subject."',	// 			type='".$query_type."',enquiry='".$contact_message."',is_active='".ACTIVE_STATUS_ID."',created='".time()."'";	// 	return $query = $this->db->query($qStr);	// }	/* -------- INSERT FUNCTIONS <END> -------- */ function	getAllcontactdetail(){    	$qStr = "SELECT 										*				 FROM					contact_queries				 WHERE					is_active = ".ACTIVE_STATUS_ID." "  ;        $query = $this->db->query($qStr);        $result= $query->result_array();    //print_r($result);die();        return $result;    }	function addContactQuery($name,$email,$message){		//echo		$qStr="INSERT into contact_queries set				name='".$name."',email='".$email."',				message='".$message."',is_active='".ACTIVE_STATUS_ID."',created='".time()."'";		return $query = $this->db->query($qStr);	}	public function getExamsListing($value='')	{		$qStr1 = "SELECT * from exams_listing ORDER BY course_start_date desc" ;    	$query1 = $this->db->query($qStr1);			return $query1->result_array();	}	public function getExamsListingDet($value='')	{		$qStr1 = "SELECT * from exams_listing where id = '".$value."'" ;    	$query1 = $this->db->query($qStr1);			return $query1->row_array();	}	public function getExamsListingDetails($value='')	{		$qStr1 = "SELECT * from exams_listing_detail where exams_listing_id = '".$value."'" ;    	$query1 = $this->db->query($qStr1);			return $query1->row_array();	}	public function getacadamicsListingDet($value='')	{		$qStr1 = "SELECT * from academic_initiative where id = '".$value."'" ;    	$query1 = $this->db->query($qStr1);			return $query1->row_array();	}	public function getFellowhispListingDet($value='')	{		$qStr1 = "SELECT * from fellowship where id = '".$value."'" ;    	$query1 = $this->db->query($qStr1);			return $query1->row_array();	}	public function getacadamicsListingDetails($value='')	{		$qStr1 = "SELECT * from academic_initiative_detail where exams_listing_id = '".$value."'" ;    	$query1 = $this->db->query($qStr1);			return $query1->row_array();	}	public function getfellowshipDetails($value='')	{		$qStr1 = "SELECT * from fellowship_detail where exams_listing_id = '".$value."'" ;    	$query1 = $this->db->query($qStr1);			return $query1->row_array();	}	public function getExamsListingSort($value='')	{		if($value=='Upcoming'){						$qStr1 = "SELECT * from exams_listing where course_start_date >= ".strtotime("now")  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}		if($value=='Deferred'){						$qStr1 = "SELECT * from exams_listing where deferred = '1' "  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}		if($value=='Completed'){						$qStr1 = "SELECT * from exams_listing where expiry_date < ".strtotime("now")." ORDER BY course_start_date desc "   ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}			}	public function getAcademicsListingSort($value='')	{		if($value=='Upcoming'){						$qStr1 = "SELECT * from academic_initiative where expiry_date > ".strtotime("now")." ORDER BY course_start_date desc "  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}		if($value=='Deferred'){						$qStr1 = "SELECT * from academic_initiative where deferred = '1' "  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}		if($value=='Completed'){						$qStr1 = "SELECT * from academic_initiative where expiry_date < ".strtotime("now")." ORDER BY course_start_date desc "  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}					}	public function getinterventionListingSort($value='')	{		if($value=='Upcoming'){						$qStr1 = "SELECT * from public_intervention where course_start_date >= ".strtotime("now")  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}		if($value=='Deferred'){						$qStr1 = "SELECT * from public_intervention where deferred = '1' "  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}		if($value=='Completed'){						$qStr1 = "SELECT * from public_intervention where expiry_date < ".strtotime("now")  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}					}	public function getphysicianListingSort($value='')	{		if($value=='Upcoming'){						$qStr1 = "SELECT * from physian_academy where course_start_date >= ".strtotime("now")  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}		if($value=='Deferred'){						$qStr1 = "SELECT * from physian_academy where deferred = '1' "  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}		if($value=='Completed'){						$qStr1 = "SELECT * from physian_academy where expiry_date < ".strtotime("now")  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}					}	public function getpartnerListingSort($value='')	{		if($value=='Upcoming'){						$qStr1 = "SELECT * from partners where course_start_date >= ".strtotime("now")  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}if($value=='Deferred'){						$qStr1 = "SELECT * from partners where deferred = '1' "  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}		if($value=='Completed'){						$qStr1 = "SELECT * from partners where expiry_date < ".strtotime("now")  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}					}	public function getfellowshipListingSort($value='')	{		if($value=='Upcoming'){						$qStr1 = "SELECT * from fellowship where course_start_date >= ".strtotime("now")  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}if($value=='Deferred'){						$qStr1 = "SELECT * from fellowship where deferred = '1' "  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}		if($value=='Completed'){						$qStr1 = "SELECT * from fellowship where expiry_date < ".strtotime("now")  ;    		$query1 = $this->db->query($qStr1);				return $query1->result_array();		}					}		public function getArchiveListing($value='')	{		$qStr1 = "SELECT * from exams_listing where register_date < ".strtotime("now") ;    	$query1 = $this->db->query($qStr1);			return $query1->result_array();	}	public function getPhysicianListing($value='')	{		$qStr1 = "SELECT * from physian_academy where register_date >= ".strtotime("now") ;    	$query1 = $this->db->query($qStr1);			return $query1->result_array();	}	public function getPartnerListing($value='')	{		$qStr1 = "SELECT * from partners where register_date >= ".strtotime("now") ;    	$query1 = $this->db->query($qStr1);			return $query1->result_array();	}	public function getInterventionListing($value='')	{		$qStr1 = "SELECT * from public_intervention where register_date >= ".strtotime("now") ;    	$query1 = $this->db->query($qStr1);			return $query1->result_array();	}	public function getFellowshipListing($value='')	{		$qStr1 = "SELECT * from fellowship ORDER BY course_start_date desc" ;    	$query1 = $this->db->query($qStr1);			return $query1->result_array();	}	public function getAcademicsListing($value='')	{		$qStr1 = "SELECT * from academic_initiative ORDER BY course_start_date desc";    	$query1 = $this->db->query($qStr1);			return $query1->result_array();	}	public function get_sub_modules_exams($value='')	{		 $qStr = "SELECT 										*				 FROM					exams_listing_detail 				 WHERE					 exams_listing_id= $value;";        $query = $this->db->query($qStr);       $result= $query->result_array();               return $result;	}	public function get_sub_modules_acadamics($value='')	{		 $qStr = "SELECT 										*				 FROM					academic_initiative_detail 				 WHERE					 exams_listing_id= $value;";        $query = $this->db->query($qStr);       $result= $query->result_array();               return $result;	}	public function get_sub_modules_fellowship($value='')	{		 $qStr = "SELECT 										*				 FROM					fellowship_detail 				 WHERE					 exams_listing_id= $value;";        $query = $this->db->query($qStr);       $result= $query->result_array();               return $result;	}	public function get_sub_modules_mets($value='')	{		 $qStr = "SELECT 										*				 FROM					public_intervention_detail 				 WHERE					 exams_listing_id= $value;";        $query = $this->db->query($qStr);       $result= $query->result_array();               return $result;	}	public function get_sub_modules_physician($value='')	{		 $qStr = "SELECT 										*				 FROM					physian_detail 				 WHERE					 exams_listing_id= $value;";        $query = $this->db->query($qStr);       $result= $query->result_array();               return $result;	}	public function get_sub_modules_partners($value='')	{		 $qStr = "SELECT 										*				 FROM					partner_detail 				 WHERE					 exams_listing_id= $value;";        $query = $this->db->query($qStr);       $result= $query->result_array();               return $result;	}		public function get_module_details($value='')	{		 $qStr = "SELECT 										*				 FROM					exams_listing				 WHERE					 id= $value;";        $query = $this->db->query($qStr);       $result= $query->row_array();               return $result;	}	public function getsubsciptions($id='')	{				 $qStr = "SELECT 										*				 FROM					subscription 				 WHERE					 user_id = '".$id."' ";		        $query = $this->db->query($qStr);       $result= $query->result_array();               return $result;	}	public function addSubscription($file_name, $user_id,$pmdc,$id,$email,$name,$designation,$institute,$phone,$address)	{		$qry = "INSERT INTO subscription SET `user_id` = '".$user_id."', `module_id` = '".$id."', `payment_status` = 0, `approval` = 0, `image` = '".$file_name."' ";		$query = $this->db->query($qry);      	// $result= $query->result_array();      	$qry1 = "Update user SET  `designation` = '".$designation."',   `institute` = '".$institute."' WHERE `id` = '".$user_id."' ";		$query1 = $this->db->query($qry1);      	// $result1= $query1->result_array();               // return $result;	}	/* -------- UPDATE FUNCTIONS <START> -------- */	/* -------- UPDATE FUNCTIONS <END> -------- */}/* End of file Page_model.php *//* Location: ./application/models/frontend/Page_model.php */?>